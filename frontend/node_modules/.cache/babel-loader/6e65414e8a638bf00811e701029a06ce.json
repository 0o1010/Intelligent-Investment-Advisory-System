{"remainingRequest":"/Users/chenxuran/PycharmProjects/platform/frontend/node_modules/babel-loader/lib/index.js!/Users/chenxuran/PycharmProjects/platform/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/chenxuran/PycharmProjects/platform/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenxuran/PycharmProjects/platform/frontend/src/components/Visualization.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenxuran/PycharmProjects/platform/frontend/src/components/Visualization.vue","mtime":1750735877623},{"path":"/Users/chenxuran/PycharmProjects/platform/frontend/babel.config.js","mtime":1680849692000},{"path":"/Users/chenxuran/PycharmProjects/platform/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1750475024166},{"path":"/Users/chenxuran/PycharmProjects/platform/frontend/node_modules/babel-loader/lib/index.js","mtime":1750475024314},{"path":"/Users/chenxuran/PycharmProjects/platform/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1750475024166},{"path":"/Users/chenxuran/PycharmProjects/platform/frontend/node_modules/vue-loader/lib/index.js","mtime":1750475024342}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["EChart","name","components","data","model","loading","models","value","label","code","loadingCodes","codes","pickerOptions","disabledDate","time","getTime","Date","now","shortcuts","text","onClick","picker","end","start","setTime","$emit","searchDate","defaultCalendar","setMonth","getMonth","emptyChartOption","title","left","tooltip","trigger","axisPointer","type","xAxis","scale","boundaryGap","axisLine","onZero","yAxis","splitArea","show","grid","right","bottom","series","smooth","showSymbol","lineStyle","width","chartOption","methods","reset","validateDateRange","dates","length","map","date","diffInDays","$message","warning","fetchETFList","$axios","get","$httpUrl","then","res","searchQuery","error","catch","finally","debounce","func","wait","timeout","args","clearTimeout","setTimeout","apply","handleDropdownVisible","val","loadGet","params","start_date","end_date","train","valid","closePrice","item","close","predictedPrice","Prediction","dateLabels","top","textStyle","fontSize","legend","console","log","created","filterETF","mounted","beforeMount"],"sources":["src/components/Visualization.vue"],"sourcesContent":["<template>\n    <div>\n        <div style=\"margin-bottom: 5px\">\n            <el-select v-model=\"model\" filterable placeholder=\"Select a NN model\" style=\"margin-left: 5px\">\n                <el-option\n                    v-for=\"item in models\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\">\n                </el-option>\n            </el-select>\n            <el-select\n                v-model=\"code\"\n                filterable\n                clearable\n                placeholder=\"Choose an ETF\"\n                style=\"margin-left: 5px\"\n                :loading=\"loadingCodes\"\n                :loading-text=\"'Loading...'\"\n                :no-match-text=\"'No matching ETF'\"\n                @visible-change=\"handleDropdownVisible\"\n            >\n                <el-option\n                    v-for=\"item in codes\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                />\n            </el-select>\n\n\n            <el-date-picker\n                style=\"margin-left: 5px\"\n                v-model=\"searchDate\"\n                type=\"daterange\"\n                :picker-options=\"pickerOptions\"\n                :default-value=\"defaultCalendar\"\n                format=\"yyyy-MM-dd\"\n                value-format=\"yyyy-MM-dd\"\n                range-separator=\"to\"\n                start-placeholder=\"start date\"\n                end-placeholder=\"end date\"\n                align=\"right\"\n                @change=\"validateDateRange\"\n            />\n\n            <el-button type=\"primary\" style=\"margin-left: 5px\" @click=\"loadGet\" icon=\"el-icon-search\">Show</el-button>\n            <el-button type=\"success\" @click=\"reset\" icon=\"el-icon-refresh\">Reset</el-button>\n\n            <el-card :body-style=\"{ padding: '20px' }\" v-loading=\"loading\" style=\"margin-top: 10px\">\n                <e-charts\n                    class=\"chart\"\n                    :option=\"chartOption\"\n                    :autoresize=\"true\"\n                    style=\"height: 600px;\"\n                />\n            </el-card>\n\n\n        </div>\n\n    </div>\n</template>\n\n<script>\nimport EChart from \"vue-echarts\";\nimport \"echarts/lib/chart/candlestick\";\nimport \"echarts/lib/component/tooltip\";\nimport \"echarts/lib/component/title\";\nimport \"echarts/lib/component/grid\";\n\nexport default {\n    name: \"Visualization\",\n\n    components: {\n        \"e-charts\": EChart,\n    },\n    data() {\n        return {\n            model: '',\n            loading: false,\n            models: [\n                {\n                    value: 'GRU',\n                    label: 'GRU'\n                }, {\n                    value: 'LSTM',\n                    label: 'LSTM'\n                }, {\n                    value: 'RNN',\n                    label: 'RNN'\n                }\n            ],\n            code: '',\n            loadingCodes: false,\n            codes: [],\n            pickerOptions: {\n                disabledDate(time) {\n                    return time.getTime() > Date.now();\n                },\n                shortcuts: [\n                    {\n                        text: 'Half year',\n                        onClick(picker) {\n                            const end = new Date();\n                            const start = new Date();\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 180);\n                            picker.$emit('pick', [start, end]);\n                        }\n                    },\n                    {\n                        text: 'One year',\n                        onClick(picker) {\n                            const end = new Date();\n                            const start = new Date();\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 365);\n                            picker.$emit('pick', [start, end]);\n                        }\n                    },\n                    {\n                        text: 'Three years',\n                        onClick(picker) {\n                            const end = new Date();\n                            const start = new Date();\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 365 * 3);\n                            picker.$emit('pick', [start, end]);\n                        }\n                    }\n                ]\n            },\n\n            searchDate: '',\n            defaultCalendar: new Date(new Date().setMonth(new Date().getMonth() - 1)),\n            emptyChartOption: {\n                title: {\n                    text: \"ETF history price chart\",\n                    left: \"center\",\n                },\n                tooltip: {\n                    trigger: \"axis\",\n                    axisPointer: {\n                        type: \"cross\",\n                    },\n                },\n                xAxis: {\n                    type: \"category\",\n                    data: [],\n                    scale: true,\n                    boundaryGap: false,\n                    axisLine: {onZero: false},\n                },\n                yAxis: {\n                    scale: true,\n                    splitArea: {show: true},\n                },\n                grid: {\n                    left: \"10%\",\n                    right: \"10%\",\n                    bottom: \"15%\",\n                },\n                series: [\n                    {\n                        name: \"Close price\",\n                        type: \"line\",\n                        data: [],\n                        smooth: true,\n                        showSymbol: false,\n                        lineStyle: {\n                            width: 2,\n                        },\n                    },\n                ],\n            },\n            chartOption: {},\n        }\n    },\n\n    methods: {\n        reset() {\n            this.code = ''\n            this.model = ''\n            this.searchDate = ''\n            this.chartOption = this.emptyChartOption\n        },\n        validateDateRange(dates) {\n            if (!dates || dates.length !== 2) return;\n\n            const [start, end] = dates.map(date => new Date(date));\n            const diffInDays = (end - start) / (1000 * 3600 * 24);\n\n            if (diffInDays < 90) {\n                this.$message.warning('Please select a date range of at least 90 days.');\n                this.searchDate = '';\n            }\n        },\n        fetchETFList() {\n            this.loadingCodes = true;\n            this.$axios.get(this.$httpUrl + '/getAllETF')\n                .then(res => res.data)\n                .then(res => {\n                    if (res.code === 200) {\n                        this.codes = res.data;\n                        this.searchQuery = res.data;\n                    } else {\n                        this.$message.error(\"Failed to load ETF list.\");\n                    }\n                })\n                .catch(() => {\n                    this.$message.error(\"Error while fetching ETF list.\");\n                })\n                .finally(() => {\n                    this.loadingCodes = false;\n                });\n        },\n        debounce(func, wait) {\n            let timeout;\n            return (...args) => {\n                clearTimeout(timeout);\n                timeout = setTimeout(() => func.apply(this, args), wait);\n            };\n        },\n        handleDropdownVisible(val) {\n            if (val) {\n                this.searchQuery = this.codes;\n            }\n        },\n\n        loadGet() {\n            if (!this.code || !this.searchDate || this.searchDate.length < 2) {\n                this.chartOption = this.emptyChartOption;\n                return;\n            }\n\n            this.loading = true;\n\n            this.$axios.get(this.$httpUrl + '/getPrice', {\n                params: {\n                    model: this.model,\n                    code: this.code,\n                    start_date: this.searchDate[0],\n                    end_date: this.searchDate[1],\n                }\n            }).then(res => res.data).then(res => {\n                if (res.code === 200) {\n                    const train = res.data.train;\n                    const valid = res.data.valid;\n\n                    const closePrice = train.map(item => item.close);\n                    const predictedPrice = valid.map(item => item.Prediction);\n                    const dateLabels = valid.map(item => item.date);\n\n                    this.chartOption = {\n                        title: {\n                            text: this.code + \" history and prediction chart\",\n                            left: \"center\",\n                            top: 10,\n                            textStyle: {\n                                fontSize: 18\n                            }\n                        },\n                        tooltip: {\n                            trigger: \"axis\",\n                            axisPointer: {type: \"cross\"},\n                        },\n                        legend: {\n                            data: [\"Actual Close\", \"Predicted\"],\n                            top: 50,\n                            left: \"center\"\n                        },\n                        grid: {\n                            left: \"10%\",\n                            right: \"10%\",\n                            bottom: \"15%\",\n                            top: 90\n                        },\n                        xAxis: {\n                            type: \"category\",\n                            data: dateLabels,\n                            scale: true,\n                            boundaryGap: false,\n                            axisLine: {onZero: false},\n                        },\n                        yAxis: {\n                            scale: true,\n                            splitArea: {show: true},\n                        },\n                        series: [\n                            {\n                                name: \"Actual Close\",\n                                type: \"line\",\n                                data: closePrice,\n                                smooth: true,\n                                showSymbol: false,\n                                lineStyle: {width: 2},\n                            },\n                            {\n                                name: \"Predicted\",\n                                type: \"line\",\n                                data: predictedPrice,\n                                smooth: true,\n                                showSymbol: false,\n                                lineStyle: {width: 2},\n                            }\n                        ],\n                    };\n                } else {\n                    this.chartOption = this.emptyChartOption;\n                    console.log('Fetch historical prices failed')\n                }\n            }).finally(() => {\n                this.loading = false;\n            });\n        }\n\n    },\n    created() {\n        this.filterETF = this.debounce(this.filterETF, 200);\n    },\n\n    mounted() {\n        this.fetchETFList()\n        this.loadGet();\n    },\n    beforeMount() {\n        this.loadGet()\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":"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"}]}