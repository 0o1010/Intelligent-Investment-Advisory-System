{"remainingRequest":"/Users/chenxuran/PycharmProjects/platform/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenxuran/PycharmProjects/platform/frontend/src/components/LLM.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenxuran/PycharmProjects/platform/frontend/src/components/LLM.vue","mtime":1750473790970},{"path":"/Users/chenxuran/PycharmProjects/platform/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1750470386460},{"path":"/Users/chenxuran/PycharmProjects/platform/frontend/node_modules/babel-loader/lib/index.js","mtime":1750470386619},{"path":"/Users/chenxuran/PycharmProjects/platform/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1750470386460},{"path":"/Users/chenxuran/PycharmProjects/platform/frontend/node_modules/vue-loader/lib/index.js","mtime":1750470386649}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFya2VkfSBmcm9tICdtYXJrZWQnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogIkxMTSIsCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHVzZXJJbnB1dDogJycsCiAgICAgICAgICAgIG1lc3NhZ2VzOiBbXSwKICAgICAgICAgICAgbW9kZWw6ICcnLAogICAgICAgICAgICBtb2RlbHM6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ01ldGEtTGxhbWEtMy4xLTQwNUItSW5zdHJ1Y3QnLAogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnTWV0YS1MbGFtYS0zLjEtNDA1Qi1JbnN0cnVjdCcKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ1F3ZW4zLTMyQicsCiAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICdRd2VuMy0zMkInCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdEZWVwU2Vlay1SMS0wNTI4JywKICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ0RlZXBTZWVrLVIxLTA1MjgnCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICBdCiAgICAgICAgfQogICAgfSwKCiAgICBtZXRob2RzOiB7CiAgICAgICAgbWFya2VkLAogICAgICAgIGxvYWRHZXQoKSB7CiAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKHRoaXMuc2Nyb2xsVG9Cb3R0b20pOwogICAgICAgICAgICB0aGlzLiRheGlvcy5nZXQodGhpcy4kaHR0cFVybCArICcvbG9hZCcsIHsKICAgICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd1c2VyJyksCiAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHRoaXMubW9kZWwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkudGhlbihyZXMgPT4gcmVzLmRhdGEpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZXMgPSBbXTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcykKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEpCiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXMuZGF0YS5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2VzLnB1c2goe3JvbGU6ICd1c2VyJywgdGV4dDogcmVzLmRhdGFbaV1bJ3VzZXInXX0pOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2VzLnB1c2goe3JvbGU6ICdhc3Npc3RhbnQnLCB0ZXh0OiByZXMuZGF0YVtpXVsnYXNzaXN0YW50J10sIHNob3dUaGluazogZmFsc2V9KTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZXMucHVzaCh7cm9sZTogJ2Fzc2lzdGFudCcsIHRleHQ6ICdFcnJvcjogJyArIHJlcy5kYXRhfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB0aGlzLiRuZXh0VGljayh0aGlzLnNjcm9sbFRvQm90dG9tKTsKICAgICAgICAgICAgfSkuY2F0Y2goKCkgPT4gewogICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlcy5wb3AoKTsKICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZXMucHVzaCh7cm9sZTogJ2Fzc2lzdGFudCcsIHRleHQ6ICdSZXF1ZXN0IGZhaWxlZCd9KTsKICAgICAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKHRoaXMuc2Nyb2xsVG9Cb3R0b20pOwogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIHNlbmRNZXNzYWdlKCkgewogICAgICAgICAgICBpZiAoIXRoaXMubW9kZWwgfHwgIXRoaXMudXNlcklucHV0LnRyaW0oKSkgewogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCJQbGVhc2Ugc2VsZWN0IGEgbW9kZWwgYW5kIGlucHV0IHlvdXIgcXVlc3Rpb24uIik7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNvbnN0IGlucHV0ID0gdGhpcy51c2VySW5wdXQudHJpbSgpOwoKICAgICAgICAgICAgdGhpcy5tZXNzYWdlcy5wdXNoKHtyb2xlOiAndXNlcicsIHRleHQ6IGlucHV0fSk7CiAgICAgICAgICAgIHRoaXMudXNlcklucHV0ID0gJyc7CgogICAgICAgICAgICB0aGlzLiRuZXh0VGljayh0aGlzLnNjcm9sbFRvQm90dG9tKTsKCiAgICAgICAgICAgIHRoaXMubWVzc2FnZXMucHVzaCh7cm9sZTogJ2Fzc2lzdGFudCcsIHRleHQ6ICdUaGlua2luZy4uLid9KTsKCiAgICAgICAgICAgIHRoaXMuJGF4aW9zLmdldCh0aGlzLiRodHRwVXJsICsgJy9zdWdnZXN0JywgewogICAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHRoaXMubW9kZWwsCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogaW5wdXQsCiAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWU6IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3VzZXInKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KS50aGVuKHJlcyA9PiByZXMuZGF0YSkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlcy5wb3AoKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcykKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlcy5wdXNoKHtyb2xlOiAnYXNzaXN0YW50JywgdGV4dDogcmVzLmRhdGEsIHNob3dUaGluazogZmFsc2V9KTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlcy5wdXNoKHtyb2xlOiAnYXNzaXN0YW50JywgdGV4dDogJ0Vycm9yOiAnICsgcmVzLmRhdGF9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKHRoaXMuc2Nyb2xsVG9Cb3R0b20pOwogICAgICAgICAgICB9KS5jYXRjaCgoKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2VzLnBvcCgpOwogICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlcy5wdXNoKHtyb2xlOiAnYXNzaXN0YW50JywgdGV4dDogJ1JlcXVlc3QgZmFpbGVkJ30pOwogICAgICAgICAgICAgICAgdGhpcy4kbmV4dFRpY2sodGhpcy5zY3JvbGxUb0JvdHRvbSk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgc2Nyb2xsVG9Cb3R0b20oKSB7CiAgICAgICAgICAgIGNvbnN0IGNoYXQgPSB0aGlzLiRyZWZzLmNoYXRCb3g7CiAgICAgICAgICAgIGNoYXQuc2Nyb2xsVG9wID0gY2hhdC5zY3JvbGxIZWlnaHQ7CiAgICAgICAgfSwKICAgICAgICBleHRyYWN0VGhpbmsodGV4dCkgewogICAgICAgICAgICBjb25zdCBtYXRjaCA9IHRleHQubWF0Y2goLzx0aGluaz4oW1xzXFNdKj8pPFwvdGhpbms+Lyk7CiAgICAgICAgICAgIHJldHVybiBtYXRjaCA/IG1hdGNoWzFdLnRyaW0oKSA6IG51bGw7CiAgICAgICAgfSwKCiAgICAgICAgc3RyaXBUaGluayh0ZXh0KSB7CiAgICAgICAgICAgIHJldHVybiB0ZXh0LnJlcGxhY2UoLzx0aGluaz5bXHNcU10qPzxcL3RoaW5rPi9nLCAnJykudHJpbSgpOwogICAgICAgIH0sCiAgICAgICAgb25Nb2RlbENoYW5nZSgpIHsKICAgICAgICAgICAgdGhpcy5tZXNzYWdlcyA9IFtdOwogICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMubG9hZEdldCgpOwogICAgICAgICAgICB9LCAxMDApOwogICAgICAgIH0KICAgIH0sCn0K"},{"version":3,"sources":["LLM.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LLM.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div style=\"margin-bottom: 5px\">\n\n            <el-select v-model=\"model\" filterable placeholder=\"Select a model\" class=\"model-select\"\n                       style=\"margin-left: 5px; margin-bottom: 10px\" @change=\"onModelChange\">\n                <el-option\n                    v-for=\"item in models\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\">\n                </el-option>\n            </el-select>\n            <div class=\"chat-container\">\n                <div class=\"chat-box\" ref=\"chatBox\">\n                    <div\n                        v-for=\"(msg, index) in messages\"\n                        :key=\"index\"\n                        :class=\"['chat-message', msg.role]\"\n                    >\n                        <p><strong>{{ msg.role === 'user' ? 'You' : 'Assistant (' + model + ')' }}:</strong>\n                        </p>\n\n                        <template v-if=\"msg.role === 'assistant'\">\n                            <div v-if=\"extractThink(msg.text)\">\n                                <el-button\n                                    type=\"text\"\n                                    size=\"mini\"\n                                    @click=\"msg.showThink = !msg.showThink\"\n                                >\n                                    {{ msg.showThink ? 'Hide thoughts' : 'Show thoughts' }}\n                                </el-button>\n\n                                <el-card\n                                    v-if=\"msg.showThink\"\n                                    class=\"think-block\"\n                                    shadow=\"never\"\n                                >\n                                    <template #header>\n                                        <span style=\"font-size: 13px; color: #999;\">Assistant is thinking...</span>\n                                    </template>\n                                    <div style=\"font-size: 13px;\" v-html=\"marked(extractThink(msg.text))\"/>\n                                </el-card>\n                            </div>\n\n                            <div class=\"markdown-body\" v-html=\"marked(stripThink(msg.text))\"/>\n                        </template>\n\n                        <p v-else>{{ msg.text }}</p>\n                    </div>\n\n                </div>\n\n                <div class=\"chat-input-bar\">\n\n                    <el-input\n                        v-model=\"userInput\"\n                        type=\"textarea\"\n                        :autosize=\"{ minRows: 4, maxRows: 10 }\"\n                        placeholder=\"Please input your question here...\"\n                        class=\"input-area\"\n                        @keydown.enter.native.prevent=\"sendMessage\"\n                    />\n\n                    <el-button type=\"primary\" icon=\"el-icon-s-promotion\" @click=\"sendMessage\">\n                        Send\n                    </el-button>\n                </div>\n            </div>\n        </div>\n\n\n    </div>\n</template>\n\n<script>\nimport {marked} from 'marked';\n\nexport default {\n    name: \"LLM\",\n    data() {\n        return {\n            userInput: '',\n            messages: [],\n            model: '',\n            models: [\n                {\n                    value: 'Meta-Llama-3.1-405B-Instruct',\n                    label: 'Meta-Llama-3.1-405B-Instruct'\n                }, {\n                    value: 'Qwen3-32B',\n                    label: 'Qwen3-32B'\n                }, {\n                    value: 'DeepSeek-R1-0528',\n                    label: 'DeepSeek-R1-0528'\n                },\n            ]\n        }\n    },\n\n    methods: {\n        marked,\n        loadGet() {\n            this.$nextTick(this.scrollToBottom);\n            this.$axios.get(this.$httpUrl + '/load', {\n                params: {\n                    username: sessionStorage.getItem('user'),\n                    model: this.model\n                }\n            }).then(res => res.data).then(res => {\n                this.messages = [];\n                console.log(res)\n                if (res.code === 200) {\n                    console.log(res.data)\n                    for (let i = 0; i < res.data.length; i++) {\n                        this.messages.push({role: 'user', text: res.data[i]['user']});\n                        this.messages.push({role: 'assistant', text: res.data[i]['assistant'], showThink: false});\n                    }\n                } else {\n                    this.messages.push({role: 'assistant', text: 'Error: ' + res.data});\n                }\n                this.$nextTick(this.scrollToBottom);\n            }).catch(() => {\n                this.messages.pop();\n                this.messages.push({role: 'assistant', text: 'Request failed'});\n                this.$nextTick(this.scrollToBottom);\n            });\n        },\n        sendMessage() {\n            if (!this.model || !this.userInput.trim()) {\n                this.$message.warning(\"Please select a model and input your question.\");\n                return;\n            }\n\n            const input = this.userInput.trim();\n\n            this.messages.push({role: 'user', text: input});\n            this.userInput = '';\n\n            this.$nextTick(this.scrollToBottom);\n\n            this.messages.push({role: 'assistant', text: 'Thinking...'});\n\n            this.$axios.get(this.$httpUrl + '/suggest', {\n                params: {\n                    model: this.model,\n                    message: input,\n                    username: sessionStorage.getItem('user')\n                }\n            }).then(res => res.data).then(res => {\n                this.messages.pop();\n                console.log(res)\n                if (res.code === 200) {\n                    this.messages.push({role: 'assistant', text: res.data, showThink: false});\n                } else {\n                    this.messages.push({role: 'assistant', text: 'Error: ' + res.data});\n                }\n                this.$nextTick(this.scrollToBottom);\n            }).catch(() => {\n                this.messages.pop();\n                this.messages.push({role: 'assistant', text: 'Request failed'});\n                this.$nextTick(this.scrollToBottom);\n            });\n        },\n        scrollToBottom() {\n            const chat = this.$refs.chatBox;\n            chat.scrollTop = chat.scrollHeight;\n        },\n        extractThink(text) {\n            const match = text.match(/<think>([\\s\\S]*?)<\\/think>/);\n            return match ? match[1].trim() : null;\n        },\n\n        stripThink(text) {\n            return text.replace(/<think>[\\s\\S]*?<\\/think>/g, '').trim();\n        },\n        onModelChange() {\n            this.messages = [];\n            setTimeout(() => {\n                this.loadGet();\n            }, 100);\n        }\n    },\n}\n</script>\n\n<style scoped>\n.chat-container {\n    display: flex;\n    flex-direction: column;\n    height: 80vh;\n    background-color: #f9f9f9;\n}\n\n.chat-box {\n    flex: 1;\n    overflow-y: auto;\n    padding: 20px;\n    background: #fff;\n    margin: 10px;\n    border-radius: 10px;\n    border: 1px solid #ddd;\n}\n\n.chat-message {\n    margin-bottom: 15px;\n    line-height: 1.5;\n}\n\n.chat-message.user {\n    text-align: right;\n    color: #409EFF;\n}\n\n.chat-message.assistant {\n    text-align: left;\n    color: #606266;\n}\n\n.chat-input-bar {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    background: #fafafa;\n    border-top: 1px solid #ddd;\n}\n\n.model-select {\n    width: 220px;\n    margin-right: 10px;\n}\n\n.input-area {\n    flex: 1;\n    margin-right: 10px;\n}\n\n.markdown-body {\n    font-size: 15px;\n    line-height: 1.6;\n    color: #333;\n    word-break: break-word;\n}\n\n.think-block {\n    background-color: #f6f6f6;\n    margin-bottom: 10px;\n    border: 1px dashed #d3d3d3;\n    font-family: 'Courier New', monospace;\n}\n\n</style>\n"]}]}